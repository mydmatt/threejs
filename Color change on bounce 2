<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
  <title>https://jsbin.com/juzixis/1/edit?html,output</title>
</head>
<body>
  <canvas id="myCanvas"></canvas>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r82/three.min.js"></script>
  <script>

    var renderer = new THREE.WebGLRenderer({canvas: document.getElementById('myCanvas'), antialias: true});
    renderer.setClearColor(0x000000);
    renderer.setPixelRatio(window.devicePixelRatio);
    renderer.setSize(window.innerWidth, window.innerHeight);
    var camera = new THREE.PerspectiveCamera(111, window.innerWidth/window.innerHeight, 0.1, 1000);
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.position.z = 183;
    var scene = new THREE.Scene();
    var light = new THREE.AmbientLight(0xffffff, 0.5);
    var lightPoint = new THREE.PointLight(0xffffff, 0.5);
    var light2 = new THREE.DirectionalLight( 0xffffff, 0.7 );
    scene.add(light);
    scene.add(lightPoint);
    scene.add(light2);
    
    
    var geometry = new THREE.SphereGeometry( 50, 32, 10 );
    var material = new THREE.MeshPhongMaterial({ 
     // color: 0xff0000,
      specular: 0x000000,
      shininess: 30,
      normalMap: new THREE.TextureLoader().load("normal.jpg")
    });
     
// this controls the color of the mesh   
function changeColor() {
    var colorList = ["0xfffff0","0xff0ff0","0xff00","0xffff0"];
         var numColorList = colorList.length;
    var index = 0;
    setInterval(function() {
        material.color.setHex(colorList[index]); 
        index = (index + 1) % numColorList;
    }, 1100);    
    } 
    changeColor();
    
    var myMesh = new THREE.Mesh(geometry, material);
     // myMesh.position.set(52,170,10);
    scene.add(myMesh);
 
    render();
    
function render(){
      var time = performance.now() * 0.0011;
      
      // rorate the ball
      myMesh.rotation.x += 0.03;
      myMesh.rotation.y += 0.03;
      
      // bounce the ball 
      var oppositeDirection = Math.sin( time ) * 170 + 95;
      myMesh.position.y = Math.sin( time ) * 110 + 10;
      myMesh.position.x = time * 0.9;
 
      if (myMesh.position.y = Math.sin( time ) * 160 + 15) {
        myMesh.position.x = oppositeDirection; 
      }
      
      renderer.render(scene, camera);
      
       requestAnimationFrame(render);
    }
    
</script>
</body>
</html>
